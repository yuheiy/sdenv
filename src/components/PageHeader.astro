---
import { SITE_TITLE } from '../consts';

interface Props {
  isHome: boolean;
}

const { isHome } = Astro.props;
---

<header class="sticky top-0 z-10 bg-zinc-900 text-zinc-100/80" x-data="{ isOpen: false }">
  <nav class="wrapper flex items-center gap-x-6">
    {/* eslint-disable-next-line astro/jsx-a11y/anchor-is-valid */}
    <a
      class="mr-auto py-2 text-xl font-bold transition [&:any-link]:hover:text-zinc-100"
      href={isHome ? null : '/'}
      title={isHome ? null : 'ホームに戻る'}
    >
      {SITE_TITLE}
    </a>
    <button
      class="py-2 text-sm transition hover:text-zinc-100 sm:hidden"
      type="button"
      @click="isOpen = true">メニュー</button
    >
    {
      [
        ['はじめに', '/about/'],
        ['お知らせ', '/news/'],
        ['実績', '/work/'],
      ].map(([label, href]) => (
        <a class="hidden py-2 text-sm transition hover:text-zinc-100 sm:inline" href={href}>
          {label}
        </a>
      ))
    }
  </nav>
  <div x-dialog x-model="isOpen" style="display: none;">
    <template x-teleport="#js-overlay-container">
      <div class="fixed inset-0 bg-black/80" x-dialog:overlay x-transition.opacity></div>
    </template>
    <div
      class="absolute inset-x-0 top-full border-t border-zinc-800 bg-zinc-900 sm:hidden"
      x-dialog:panel
      x-collapse
    >
      <ul class="wrapper divide-y divide-zinc-800">
        {
          [
            ['はじめに', '/about/'],
            ['お知らせ', '/news/'],
            ['実績', '/work/'],
          ].map(([label, href]) => (
            <li>
              <a class="block py-3 text-sm transition hover:text-zinc-100" href={href}>
                {label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</header>
